// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.en');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "新增註解";
Blockly.Msg.AUTH = "Please authorize this app to enable your work to be saved and to allow it to be shared by you.";
Blockly.Msg.CHANGE_VALUE_TITLE = "更改值:";
Blockly.Msg.CHAT = "Chat with your collaborator by typing in this box!";
Blockly.Msg.COLLAPSE_ALL = "摺疊所有積木";
Blockly.Msg.COLLAPSE_BLOCK = "摺疊積木";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "colour 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "colour 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "ratio";
Blockly.Msg.COLOUR_BLEND_TITLE = "blend";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blends two colours together with a given ratio (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Choose a colour from the palette.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";
Blockly.Msg.COLOUR_RANDOM_TITLE = "random colour";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Choose a colour at random.";
Blockly.Msg.COLOUR_RGB_BLUE = "blue";
Blockly.Msg.COLOUR_RGB_GREEN = "green";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "red";
Blockly.Msg.COLOUR_RGB_TITLE = "colour with";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Create a colour with the specified amount of red, green, and blue.  All values must be between 0 and 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#Loop_Termination_Blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "馬上跳出 迴圈";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "繼續下一次 迴圈";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "馬上跳出目前執行的迴圈.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "跳過之後的程式敘述, 馬上繼續執行下一次迴圈.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "警告: 這個積木只能使用在迴圈的程式區塊.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#for_each for each block";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "in list";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "for each item";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "For each item in a list, set the variable '%1' to the item, and then do some statements.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#count_with";
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "從 %1 到 %2 增量 %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "計數迴圈for";
Blockly.Msg.CONTROLS_FOR_INPUT_ORDER = "遞增計數迴圈";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "使用計數器變數 %1 從一個開始值至結束值, 每一次增加一個值來重複執行程式區塊.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "在if條件區塊的積木1新增條件.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "新增最後的否則else條件, 這是if條件的其他條件程式區塊.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://code.google.com/p/blockly/wiki/If_Then";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "新增, 刪除, 或重排區段來重新規劃這個if條件積木.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "否則else";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "否則如果else/if";
Blockly.Msg.CONTROLS_IF_MSG_IF = "如果if";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "如果條件值為True, 就執行程式區塊的程式碼.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "如果條件值是True, 就執行第1個程式區塊. 否則執行第2個程式區塊的程式碼.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "如果第1個條件值為True, 就執行第1個程式區塊. 否則如果第2個條件值為True, 就執行第2個程式區塊的程式碼.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "如果第1個條件值為True, 就執行第1個程式區塊. 否則如果第2個條件值為True, 就執行第2個程式區塊的程式碼. 如果都為False, 執行最後1個程式區塊的程式碼.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "執行";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "重複 %1 次";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "條件迴圈";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "次";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "重複執行一些程式敘述很多次.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "條件迴圈 直到until";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "條件迴圈 當while";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "當條件為False, 就重複執行一些程式敘述.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "當條件為True, 就重複執行一些程式敘述.";
Blockly.Msg.DELETE_BLOCK = "刪除積木";
Blockly.Msg.DELETE_X_BLOCKS = "刪除 %1 積木";
Blockly.Msg.DISABLE_BLOCK = "停用積木";
Blockly.Msg.DUPLICATE_BLOCK = "複製";
Blockly.Msg.ENABLE_BLOCK = "啟用積木";
Blockly.Msg.EXPAND_ALL = "展開多個積木";
Blockly.Msg.EXPAND_BLOCK = "展開積木";
Blockly.Msg.EXTERNAL_INPUTS = "外部輸入";
Blockly.Msg.HELP = "幫助";
Blockly.Msg.INLINE_INPUTS = "同行輸入";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://en.wikipedia.org/wiki/Linked_list#Empty_lists";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "建立空清單";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returns a list, of length 0, containing no data records";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "list";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Add, remove, or reorder sections to reconfigure this list block.";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "create list with";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Add an item to the list.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Create a list with any number of items.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "first";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# from end";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "get";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "get and remove";
Blockly.Msg.LISTS_GET_INDEX_LAST = "last";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "random";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "remove";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returns the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Returns the item at the specified position in a list.  #1 is the last item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Returns the item at the specified position in a list.  #1 is the first item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returns the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returns a random item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Removes and returns the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Removes and returns the item at the specified position in a list.  #1 is the last item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Removes and returns the item at the specified position in a list.  #1 is the first item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Removes and returns the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Removes and returns a random item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Removes the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Removes the item at the specified position in a list.  #1 is the last item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Removes the item at the specified position in a list.  #1 is the first item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Removes the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Removes a random item in a list.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "to # from end";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "to #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "to last";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#Getting_a_sublist";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "get sub-list from first";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "get sub-list from # from end";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "get sub-list from #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Creates a copy of the specified portion of a list.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "find first occurrence of item";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#Getting_Items_from_a_List";
Blockly.Msg.LISTS_INDEX_OF_LAST = "find last occurrence of item";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returns the index of the first/last occurrence of the item in the list.  Returns 0 if text is not found.";
Blockly.Msg.LISTS_INLIST = "in list";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#is_empty";
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 is empty";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#length_of";
Blockly.Msg.LISTS_LENGTH_TITLE = "length of %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returns the length of a list.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#create_list_with";
Blockly.Msg.LISTS_REPEAT_TITLE = "create list with item %1 repeated %2 times";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Creates a list consisting of the given value repeated the specified number of times.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#in_list_..._set";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "as";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insert at";
Blockly.Msg.LISTS_SET_INDEX_SET = "set";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the start of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserts the item at the specified position in a list.  #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserts the item at the specified position in a list.  #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Sets the item at the specified position in a list.  #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Sets the item at the specified position in a list.  #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sets the last item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";
Blockly.Msg.LISTS_TOOLTIP = "Returns true if the list is empty.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "假";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://code.google.com/p/blockly/wiki/True_False";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "傳回真True或假False.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "真";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "如果2個值相等, 傳回True.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "如果第1個值大於第2個值, 傳回True.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "如果第1個值大於等於第2個值, 傳回True.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "如果第1個值小於第2個值, 傳回True.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "如果第1個值小於等於第2個值, 傳回True.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "如果第1個值不等於第2個值, 傳回True.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://en.wikipedia.org/wiki/Negation";
Blockly.Msg.LOGIC_NEGATE_TITLE = "非 %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "如果輸入False傳回True, 輸入True傳回False.";
Blockly.Msg.LOGIC_NULL = "空值NULL";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "傳回空值 null.";
Blockly.Msg.LOGIC_OPERATION_AND = "且";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://code.google.com/p/blockly/wiki/And_Or";
Blockly.Msg.LOGIC_OPERATION_OR = "或";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "如果2個都是True, 傳回True.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "至少有1個True, 才會傳回True.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "單行條件";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "如為假:";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "如為真?";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "檢查條件, 如為True傳回如為真的值, 否則傳回如為假的值.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "傳回2個數值的和.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "傳回2個數值的商.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "傳回2個數值的差.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "傳回2個數值的乘積.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "傳回第1個為底, 第2個為指數的指數值.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "by";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "change";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrain %1 low %2 high %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified limits (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";
Blockly.Msg.MATH_IS_EVEN = "is even";
Blockly.Msg.MATH_IS_NEGATIVE = "is negative";
Blockly.Msg.MATH_IS_ODD = "is odd";
Blockly.Msg.MATH_IS_POSITIVE = "is positive";
Blockly.Msg.MATH_IS_PRIME = "is prime";
Blockly.Msg.MATH_IS_TOOLTIP = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number.  Returns true or false.";
Blockly.Msg.MATH_IS_WHOLE = "is whole";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "餘數 %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "傳回除予兩值的餘數.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "一個數值.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "average of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "max of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "median of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "min of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modes of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "random item of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standard deviation of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "sum of list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Return the average (arithmetic mean) of the numeric values in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Return the largest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Return the median number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Return the smallest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Return a list of the most common item(s) in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Return a random element from the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Return the standard deviation of the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Return the sum of all the numbers in the list.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "random fraction";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "random integer from %1 to %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Return a random integer between the two specified limits, inclusive.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "四捨五入";
Blockly.Msg.MATH_ROUND_OPERATOR_CEIL = "無條件進位";
Blockly.Msg.MATH_ROUND_OPERATOR_FLOOR = "無條件捨去";
Blockly.Msg.MATH_ROUND_OPERATOR_TRUNC = "剪裁";
Blockly.Msg.MATH_ROUND_TOOLTIP = "將數值向上或向下捨入小數值.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "絕對";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "平方根";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "傳回數值的絕對值.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "傳回數值的指數.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG = "傳回數值的自然對數.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "傳回數值的10為底的對數.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG2 = "傳回數值的2為底的對數.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "傳回數值的負值.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW = "傳回數值指定基底的指數.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "傳回數值的平方根.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_LOG = "log";
Blockly.Msg.MATH_TRIG_LOG10 = "log10";
Blockly.Msg.MATH_TRIG_LOG2 = "log2";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "傳回指定角度的反餘弦值(非弧度）。";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "傳回指定角度的反正弦值(非弧度）。";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "傳回指定角度的反正切值。";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "傳回指定角度的餘弦值(非弧度）。";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "傳回指定角度的正弦值(非弧度）。";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "傳回指定角度的正切值(非弧度）。";
Blockly.Msg.ME = "我";
Blockly.Msg.NEW_VARIABLE = "新變數...";
Blockly.Msg.NEW_VARIABLE_TITLE = "新變數名稱:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "允許有程式敘述";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "參數:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "呼叫函數";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "執行使用者自訂函數 '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "執行使用者自訂函數 '%1' 和回傳值.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "參數:";
Blockly.Msg.PROCEDURES_CREATE_DO = "建立 '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "myFunc";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "函數名稱";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "建立沒有傳回值的函數.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "傳回";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "建立擁有傳回值的函數.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "警告: 這個函數擁有重複的參數.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "高亮度函數定義";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "如果是是True, 就傳回第2個值.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "警告: 這個積木只能使用在函數定義.";
Blockly.Msg.PROCEDURES_MUTATORARG_PRETITLE='變數';
Blockly.Msg.PROCEDURES_MUTATORARG_ARRAY_PRETITLE='陣列';
Blockly.Msg.PROCEDURES_MUTATORARG_POINTER_PRETITLE='指標';
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "參數值:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "新增參數至函數.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "參數列";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "新增, 刪除 或重排函數參數.";
Blockly.Msg.REMOVE_COMMENT = "刪除註解";
Blockly.Msg.RENAME_VARIABLE = "重新命名變數...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "重新命名全部 '%1' 變數為:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "append text";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_modification";
Blockly.Msg.TEXT_APPEND_TO = "to";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Append some text to variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Adjusting_text_case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "to lower case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "to Title Case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "to UPPER CASE";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";
Blockly.Msg.TEXT_CHARAT_FIRST = "get first letter";
Blockly.Msg.TEXT_CHARAT_FROM_END = "get letter # from end";
Blockly.Msg.TEXT_CHARAT_FROM_START = "get letter #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Extracting_text";
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_CHARAT_LAST = "get last letter";
Blockly.Msg.TEXT_CHARAT_RANDOM = "get random letter";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returns the letter at the specified position.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item to the text.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "join";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "to letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "to letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "to last letter";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Extracting_a_region_of_text";
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in text";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "get substring from first letter";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "get substring from letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "get substring from letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returns a specified portion of the text.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Finding_text";
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find first occurrence of text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find last occurrence of text";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returns the index of the first/last occurrence of first text in the second text.  Returns 0 if text is not found.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Checking_for_empty_text";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 is empty";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returns true if the provided text is empty.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_creation";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "create text with";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Create a piece of text by joining together any number of items.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_modification";
Blockly.Msg.TEXT_LENGTH_TITLE = "length of %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returns the number of letters (including spaces) in the provided text.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Printing_text";
Blockly.Msg.TEXT_PRINT_TITLE = "顯示 %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "格式化顯示字串, 數值和其他值.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Getting_input_from_the_user";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Prompt for user for a number.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Prompt for user for some text.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "prompt for number with message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "prompt for text with message";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "字元, 單字或一行文字內容.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Trimming_%28removing%29_spaces";
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "trim spaces from both sides of";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "trim spaces from left side of";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "trim spaces from right side of";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Return a copy of the text with spaces removed from one or both ends.";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "item";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "建立 '指定 %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://code.google.com/p/blockly/wiki/Variables#Get";
Blockly.Msg.VARIABLES_GET_TAIL = "";
Blockly.Msg.VARIABLES_GET_TITLE = "";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "傳回這個變數的值.";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "建立 '取 %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://code.google.com/p/blockly/wiki/Variables#Set";
Blockly.Msg.VARIABLES_SET_TAIL = "成為";
Blockly.Msg.VARIABLES_SET_TITLE = "指定";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "指定這個變數成為之後的值.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.VARIABLES_SET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.STDIO_PRINTF_TITLE = '輸出printf';
Blockly.Msg.STDIP_PRINTF_MUTATOR_PRINTFADD_TITLE = '項目';
Blockly.Msg.STDIO_SCANF_TITLE = '輸入scanf';
Blockly.Msg.STDIP_SCANF_MUTATOR_SCANFADD_TITLE = '項目';
Blockly.Msg.STDIO_SCANF_TOOLTIP = '';
Blockly.Msg.STDIO_SCANF_HELPURL = 'https://en.wikipedia.org/wiki/Scanf_format_string';
Blockly.Msg.STDIO_NEWLINE_TITLE = '新行\n';
Blockly.Msg.STDIO_NEWLINE_TOOLTIP = '新行字元';
Blockly.Msg.STDIO_NEWLINE_HELPURL = 'https://en.wikipedia.org/wiki/Newline';
Blockly.Msg.COMMENT_TITLE = '註解';
Blockly.Msg.COMMENT_MUTATOR_COMMENTADD_TITLE = '項目';
Blockly.Msg.COMMENT_TOOLTIP = '"註解" 是一序列的字元使用斜線/和星號 (/*) 開始, 對於編譯器來說如同是單一空白字元, 而被忽略, 註解可以組合各種字元, 包含新行字元, 不含註解結束的 (*/). 註解可以跨過很多行, 但不支援巢狀註解, 和出現在任何地方';
Blockly.Msg.STDLIB_CONVERT_TITLE = '轉換字串 %1 成為 %2';
Blockly.Msg.STDLIB_CONVERT_INT = 'int';
Blockly.Msg.STDLIB_CONVERT_DOUBLE = 'double';
Blockly.Msg.STDLIB_CONVERT_TOOLTIP = '轉換字串成為整數或浮點數型態.';
Blockly.Msg.STDLIB_CONVERT_HELPURL = 'https://en.wikipedia.org/wiki/C_string_handling';
Blockly.Msg.STDLIB_RAND_TITLE = '亂數值 %1';
Blockly.Msg.STDLIB_RAND_TOOLTIP = '指定亂數值';
Blockly.Msg.STDLIB_RAND_HELPURL = 'https://en.wikipedia.org/wiki/C_mathematical_functions#Random_number_generation';
Blockly.Msg.STDLIB_RANDSCOPE_TITLE = "亂數值範圍: %1 ~ %2";
Blockly.Msg.STDLIB_RANDSCOPE_TOOLTIP = '指定混亂數值範圍.';
Blockly.Msg.STDLIB_RANDSCOPE_HELPURL = 'https://en.wikipedia.org/wiki/C_mathematical_functions#Random_number_generation';
Blockly.Msg.STDLIB_SRAND_TITLE = '亂數種子 %1'; // not use
Blockly.Msg.STDLIB_MALLOC_TITLE = '配置記憶體 malloc %1';
Blockly.Msg.STDLIB_MALLOC_TOOLTIP = '動態記憶體配置';
Blockly.Msg.STDLIB_MALLOC_HELPURL = 'https://en.wikipedia.org/wiki/C_dynamic_memory_allocation';
Blockly.Msg.STDLIB_SIZEOFFORMALLOC_TITLE = '位元組數 %1';
Blockly.Msg.STDLIB_SIZEOFFORMALLOC_TOOLTIP = '傳回位元組數';
Blockly.Msg.STDLIB_SIZEOFFORMALLOC_HELPURL = 'https://en.wikipedia.org/wiki/Sizeof';
Blockly.Msg.STDLIB_ARITHFORMALLOC_TITLE = '%1 x %2';
Blockly.Msg.STDLIB_FREE_TITLE = '釋放記憶體 free %1';
Blockly.Msg.STDLIB_FREE_TOOLTIP = '釋放配置的記憶體';
Blockly.Msg.STDLIB_FREE_HELPURL = 'https://en.wikipedia.org/wiki/C_dynamic_memory_allocation';
Blockly.Msg.STDLIB_EXIT_TITLE = '結束 exit %1';
Blockly.Msg.STDLIB_EXIT_SUCCESS = '成功';
Blockly.Msg.STDLIB_EXIT_FAILURE = '失敗';
Blockly.Msg.STDLIB_EXIT_TOOLTIP = '結束程式.';
Blockly.Msg.STDLIB_EXIT_HELPURL = 'https://en.wikipedia.org/wiki/Exit_(system_call)';
Blockly.Msg.MATH_SIN_TITLE = 'sin %1'; // not use
Blockly.Msg.MATH_COS_TITLE = 'cos %1'; // not use
Blockly.Msg.MATH_TAN_TITLE = 'tan %1'; // not use
Blockly.Msg.MATH_POW_TITLE = '指數pow %1 ^ %2'; //'pow %1 ^ %2';
Blockly.Msg.MATH_EXP_TITLE = '對數exp %1';
Blockly.Msg.MATH_SQRT_TITLE = '平方根sqrt %1';
Blockly.Msg.MATH_ABS_TITLE = '絕對值 %1'; // not use
Blockly.Msg.MATH_NUMCHECK_TITLE = '%1 是 %2 ?';
Blockly.Msg.MATH_NUMCHECK_ISFINITE = '有限值';
Blockly.Msg.MATH_NUMCHECK_ISINF = '無限值';
Blockly.Msg.MATH_NUMCHECK_SIGNBIT = '負值';
Blockly.Msg.MATH_NUMCHECK_ISNAN = 'NaN值';
Blockly.Msg.MATH_NUMCHECK_TOOLTIP = '';
Blockly.Msg.MATH_NUMCOMPARE_TITLE = '%1 第1個值是 %3 第2個值 %2';
Blockly.Msg.MATH_NUMCOMPARE_ISGREATER = '大於';
Blockly.Msg.MATH_NUMCOMPARE_ISLESS = '小於';
Blockly.Msg.MATH_NUMCOMPARE_ISGREQ = '大於等於';
Blockly.Msg.MATH_NUMCOMPARE_ISLEEQ = '小於等於';
Blockly.Msg.MATH_NUMCOMPARE_ISLEGR = '不等於';
Blockly.Msg.MATH_NUMCOMPARE_ISUNORDER = '沒有順序的';
Blockly.Msg.MATH_NUMCOMPARE_TOOLTIP = '';
Blockly.Msg.STRING_STRLEN_TITLE = '字串長度 %1';
Blockly.Msg.STRING_STRLEN_TOOLTIP = '傳回字串長度';
Blockly.Msg.STRING_STRLEN_HELPURL = 'https://en.wikipedia.org/wiki/C_string_handling';
Blockly.Msg.STRING_STRCAT_TITLE = '字串連接 %1 和 %2';
Blockly.Msg.STRING_STRCAT_TOOLTIP = '連接兩個字串';
Blockly.Msg.STRING_STRCAT_HELPURL = 'https://en.wikipedia.org/wiki/C_string_handling';
Blockly.Msg.STRING_STRCPY_TITLE = '字串複製從 %1 到 %2';
Blockly.Msg.STRING_STRCPY_TOOLTIP = '複製第1個字串至第2個字串';
Blockly.Msg.STRING_STRCPY_HELPURL = 'https://en.wikipedia.org/wiki/C_string_handling';
Blockly.Msg.STRING_STRCMP_TITLE = '字串比較 %1 和 %2';
Blockly.Msg.STRING_STRCMP_TOOLTIP = '比較兩個字串';
Blockly.Msg.STRING_STRCMP_HELPURL = 'https://en.wikipedia.org/wiki/C_string_handling';

Blockly.Msg.TIME_REQUIREDTIME_TITLE = '計算經過時間';
Blockly.Msg.TIME_REQRUIEDTIME_TALE = '儲存至 double 變數 %1';
Blockly.Msg.TIME_TIME_CURRENT_TITLE = '顯示目前時間';

Blockly.Msg.VARIABLES_SET_DIST_VARIABLE = '變數';
Blockly.Msg.VARIABLES_SET_DIST_POINTER = '指標';
Blockly.Msg.VARIABLES_SET_DIST_ARRAY = '陣列';
Blockly.Msg.VARIABLES_SET_POINTER_SPEC_ONE = '*';
Blockly.Msg.VARIABLES_SET_POINTER_SPEC_TWO = '**';
Blockly.Msg.VARIABLES_SET_ARRAY_SPEC_ONE = '[]';
Blockly.Msg.VARIABLES_SET_ARRAY_SPEC_TWO = '[][]';
Blockly.Msg.VARIABLES_SET_ARRAY_SPEC_THREE = '[][][]';
Blockly.Msg.VARIABLES_SET_TYPE_INT = 'int';
Blockly.Msg.VARIABLES_SET_TYPE_UNSIGNED_INT= 'unsigned int';
Blockly.Msg.VARIABLES_SET_TYPE_FLOAT = 'float';
Blockly.Msg.VARIABLES_SET_TYPE_DOUBLE = 'double';
Blockly.Msg.VARIABLES_SET_TYPE_CHAR= 'char';
Blockly.Msg.VARIABLES_SET_ITERATION_NORMAL = '*';
Blockly.Msg.VARIABLES_SET_ITERATION_DOUBLE = '**';
Blockly.Msg.VARIABLES_SET_ITERATION_TRIPLE = '***';
Blockly.Msg.VARIABLES_DECLARE_TITLE = '變數';
Blockly.Msg.VARIABLES_DECLARE_NAME = '名稱';
Blockly.Msg.VARIABLES_DECLARE_INIT = '初始值';
Blockly.Msg.VARIABLES_DECLARE_DEFAULT_NAME = 'myVar';
Blockly.Msg.VARIABLES_POINTER_DECLARE_TITLE = '指標';
Blockly.Msg.VARIABLES_POINTER_DECLARE_ITERATION = '';
Blockly.Msg.VARIABLES_POINTER_DECLARE_DEFAULT_NAME = 'myPtr';
Blockly.Msg.VARIABLES_ARRAY_DECLARE_TITLE = '陣列';
Blockly.Msg.VARIABLES_ARRAY_DECLARE_LENGTH = '元素數';
Blockly.Msg.VARIABLES_ARRAY_DECLARE_DEFAULT_NAME = 'myArr';
Blockly.Msg.VARIABLES_RETURN = '傳回 ';

Blockly.Msg.POINTER_GET_TITLE = "";
Blockly.Msg.ARRAY_GET_TITLE = "";

Blockly.Msg.FUNCTION_SET_TYPE_INT = 'int';
Blockly.Msg.FUNCTION_SET_TYPE_FLOAT = 'float';
Blockly.Msg.FUNCTION_SET_TYPE_DOUBLE = 'double';
Blockly.Msg.FUNCTION_SET_TYPE_LONG = 'long';
Blockly.Msg.FUNCTION_SET_TYPE_LONGLONG = 'long long';
Blockly.Msg.FUNCTION_SET_TYPE_SHORT = 'short';
Blockly.Msg.FUNCTION_SET_TYPE_LONGDOUBLE = 'long double';
Blockly.Msg.FUNCTION_SET_TYPE_CHAR = 'char';

Blockly.Msg.DEFINE_DECLARE_TITLE = '#define';
Blockly.Msg.DEFINE_DECLARE_INIT = '是';
Blockly.Msg.DEFINE_DECLARE_DEFAULT_NAME = 'myMacro';
Blockly.Msg.DEFINE_GET_TITLE = '';
Blockly.Msg.DEFINE_SET_TYPE_CONSTANT = '常數';
Blockly.Msg.DEFINE_SET_TYPE_MACRO = '巨集';

Blockly.Msg.MAIN_BLOCK = 'main() 函數: 主程式';
Blockly.Msg.MAIN_BLOCK_RETURN = "int 型態的傳回值:";

Blockly.Msg.CONTROLS_SWITCH = '多選一條件switch ';
Blockly.Msg.CONTROLS_SWITCH_CASE = '測試case:';

Blockly.Msg.STRUCTURE_DEFINE_TITLE = '結構型態名稱';
Blockly.Msg.STRUCTURE_DEFINE_NAME = 'myStructure';
Blockly.Msg.STRUCTURE_MUTATORCONTAINER_TITLE = '成員';
Blockly.Msg.STRUCTURE_MUTATORMEM_VAR= '變數型態';
Blockly.Msg.STRUCTURE_MUTATORMEM_POINTER= '指標型態';
Blockly.Msg.STRUCTURE_MUTATORMEM_ARRAY= '字串型態';
Blockly.Msg.STRUCTURE_MUTATORARG_NAME = '名稱';

Blockly.Msg.STRUCTURE_DECLARE_TITLE = '型態';
Blockly.Msg.STRUCTURE_DECLARE_TALE = '名稱';
Blockly.Msg.STRUCTURE_DECLARE_NAME = 'myStructure1';

Blockly.Msg.STRUCTURE_SET_NAME = '名稱';
Blockly.Msg.STRUCTURE_SET_MEMBER = '成員';

Blockly.Msg.STRUCTURE_GET_NAME = '名稱';
Blockly.Msg.STRUCTURE_GET_MEMBER = '成員';

Blockly.Msg.UNION_DEFINE_NAME = 'myUnion';

Blockly.Msg.PROCEDURES_RETURN_TITLE = '結束函數 回傳';
Blockly.Msg.PROCEDURES_RETURN_TOOLTIP = '傳回值後, 結束函數執行, 沒有回傳值就是結束函數, 可以使用在函數程式區塊的任何地方';
Blockly.Msg.PLZ_OUT_OF_BLOCK = '警告: 這個積木不能置於其他程式區塊之外, 除了函數區塊.';
Blockly.Msg.PLZ_INSIDE_FUNCTION = '警告: 將這個積木置於函數之中.';
Blockly.Msg.PLZ_OUT_OF_FUNCTION = '警告: 將這個積木置於函數之外.';
Blockly.Msg.SELECT_MENU = '-Item-';
Blockly.Msg.SELECT_TYPE = '-Type-';

Blockly.Msg.TAG_DEFINE_DECLARE = ['macro', 'constant'];
Blockly.Msg.TAG_DEFINE_GET = ['macro', 'constant', 'get'];
Blockly.Msg.TAG_VARIABLE_DECLARE = ['variables', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_VARIABLE_SET = ['variables', 'assignment', 'set'];
Blockly.Msg.TAG_VARIABLE_GET = ['variables', 'get'];
Blockly.Msg.TAG_VARIABLE_POINTER_DECLARE = ['pointer', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_VARIABLE_POINTER_SET = ['pointer', 'assignment', 'set'];
Blockly.Msg.TAG_VARIABLE_POINTER_GET = ['pointer', 'get'];
Blockly.Msg.TAG_VARIABLE_POINTER_ADDR = ['&', 'address'];
Blockly.Msg.TAG_VARIABLE_POINTER_ASTR = ['*', 'asterisk'];
Blockly.Msg.TAG_VARIABLE_ARRAY_DECLARE = ['array', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_VARIABLE_ARRAY_SET = ['array', 'assignment', 'set'];
Blockly.Msg.TAG_VARIABLE_ARRAY_GET = ['array', 'get'];

Blockly.Msg.TAG_STRUCTURE_DEFINE = ['structure', 'typedef', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_STRUCTURE_DECLARE = ['structure', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_STRUCTURE_GET = ['structure', 'get'];
Blockly.Msg.TAG_STRUCTURE_SET = ['structure', 'assignment', 'set'];

Blockly.Msg.TAG_LOGIC_IF = ['if', 'if else', 'ifelse'];
Blockly.Msg.TAG_LOGIC_COMPARE = ['compare'];
Blockly.Msg.TAG_LOGIC_OPERATION = ['operation', 'and', 'or'];
Blockly.Msg.TAG_LOGIC_NEGATE = ['!', 'negate'];
Blockly.Msg.TAG_LOGIC_BOOLEAN = ['boolean', 'true', 'false'];
Blockly.Msg.TAG_LOGIC_NULL = ['null', 'null character'];
Blockly.Msg.TAG_LOGIC_TERNARY = ['?'];
Blockly.Msg.TAG_LOGIC_SWITCH = ['switch', 'case'];

Blockly.Msg.TAG_LOOP_WHILE = ['while', 'loop'];
Blockly.Msg.TAG_LOOP_FOR = ['for', 'loop'];
Blockly.Msg.TAG_LOOP_FLOW = ['break', 'continue'];

Blockly.Msg.TAG_PROCEDURE_DEFNORETURN = ['void', 'function'];
Blockly.Msg.TAG_PROCEDURE_DEFRETURN = ['function'];

Blockly.Msg.TAG_MATH_NUMBER = ['number'];
Blockly.Msg.TAG_MATH_ARITHMETIC = ['number', 'arithmetic', 'additionsubtractionmultiplicationdivision', '+-*/'];
Blockly.Msg.TAG_MATH_MODULO = ['arithmetic', 'remainder', '%'];

Blockly.Msg.TAG_STDIO_PRINTF = ['stdio.h', 'printf()', 'output', 'out'];
Blockly.Msg.TAG_STDIO_TEXT = ['stdio.h', 'text'];
Blockly.Msg.TAG_STDIO_NEWLINE = ['stdio.h', 'newline', 'new line', '\n', 'change line', 'line change'];
Blockly.Msg.TAG_STDIO_SCANF = ['stdio.h', 'scanf()', 'input'];

Blockly.Msg.TAG_COMMENT = ['comment', 'Comment', '\/\/', '\/**\/'];

Blockly.Msg.TAG_STDLIB_CONVERT = ['stdlib.h', 'convert', 'atoi()', 'atof()'];
Blockly.Msg.TAG_STDLIB_RAND = ['stdlib.h', 'random number'];
Blockly.Msg.TAG_STDLIB_MALLOC = ['stdlib.h', 'malloc()', 'memory allocation', 'memory allocate'];
Blockly.Msg.TAG_STDLIB_SIZEOF = ['stdlib.h', 'sizeof()', 'size of', 'sizeOf'];
Blockly.Msg.TAG_STDLIB_FREE = ['stdlib.h', 'free()'];
Blockly.Msg.TAG_STDLIB_EXIT = ['stdlib.h', 'exit(0)', 'exit(1)', 'end', 'the end'];

Blockly.Msg.TAG_STRING_STRLEN = ['string.h', 'strlen()', 'string length', 'length of string'];
Blockly.Msg.TAG_STRING_STRCAT = ['string.h', 'strcat()', 'string concatenate', 'concatenate string'];
Blockly.Msg.TAG_STRING_STRCPY = ['string.h', 'strcpy()', 'string copy', 'copy string'];
Blockly.Msg.TAG_STRING_STRCMP = ['string.h', 'strcmp()', 'string compare', 'compare string'];

Blockly.Msg.TAG_MATH_ABS = ['math.h', 'absolute value'];
Blockly.Msg.TAG_MATH_TRIG = ['math.h', 'trigonometric function', 'sin()', 'cos()', 'tan()', 'sine function', 'cosine function', 'tangent function'];
Blockly.Msg.TAG_MATH_LOGS = ['math.h', 'log()', 'loge()', 'log10()', 'log2()', 'log e'];
Blockly.Msg.TAG_MATH_POW = ['math.h', 'power', 'pow()'];
Blockly.Msg.TAG_MATH_EXP = ['math.h', 'exponential function', 'exp()'];
Blockly.Msg.TAG_MATH_SQRT = ['math.h', 'sqrt()', 'square root'];
Blockly.Msg.TAG_MATH_ROUND = ['math.h', 'round up', 'round down', 'round()', 'trunc()', 'ceil()', 'floor()', 'truncate'];
Blockly.Msg.TAG_MATH_NUMCHECK = ['math.h', 'two number check'];
Blockly.Msg.TAG_MATH_NUMCOMPARE = ['math.h', 'two number compare'];

Blockly.Msg.TAG_TIME_CURRENT = ['time.h', 'get current time', 'print current time'];
Blockly.Msg.TAG_TIME_REQUIREDTIME = ['time.h', 'the time to do followings'];

Blockly.Msg.PROCEDURES_ILLEGALNAME = '不合法的函數名稱';
Blockly.Msg.VARIABLES_ILLEGALNAME = '不合法的變數名稱';
Blockly.Msg.STRUCTURE_ILLEGALNAME = '不合法的結構名稱';

Blockly.Msg.CONTROLS_SWITCH_BREAK_WARNING = "警告 : 這個積木需要在多選一條件switch的程式區塊.";
Blockly.Msg.CONTROLS_SWITCH_BREAK = '跳出switch';
Blockly.Msg.CONTROLS_SWITCH_BREAK_TOOLTIP = '跳出和結束switch多選一條件的程式區塊.';
Blockly.Msg.CONTROLS_SWITCH_DEFAULT = '沒有符合測試條件default:';
Blockly.Msg.CONTROLS_SWITCH_DO = "執行";
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP1 = "如果都沒有對應值, 執行第1個程式區塊, 如果值符合第2個值, 執行第2個程式區塊.";
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP2 = "果都沒有對應值, 執行第1個程式區塊, 如果值符合第2個值, 執行第2個程式區塊, 如果符合第3個值, 執行第3個程式區塊.";
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP3 = "果都沒有對應值, 執行第1個程式區塊, 如果值符合第2個值, 執行第2個程式區塊, .... , 如果符合最後1個值, 執行最後1個程式區塊.";
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP4 = "果都沒有對應值, 執行第1個程式區塊, 如果值符合第2個值, 執行第2個程式區塊, .... , 如果符合最後1個值, 執行最後1個程式區塊.";
Blockly.Msg.CONTROLS_SWITCH_CASE_TOOLTIP = "新增測試case的條件."

Blockly.Msg.MAINPROCEDURES_TOOLTIP = "基本程式結構的main()函數, 傳回int整數值";

Blockly.Msg.STRUCTURE_DEFINE_TOOPTIP = "定義結構, 可以新增, 刪除, 重新命名結構的成員. 我們需要在使用結構前先定義.";
Blockly.Msg.STRUCTURE_DECLARE_TOOPTIP = "使用定義的結構宣告變數(類似變數宣告). 我們需要在使用結構前先定義.";
Blockly.Msg.STRUCTURE_GET_TOOLTIP = "傳回結構本身或成員值.";
Blockly.Msg.STRUCTURE_SET_TOOLTIP = "指定結構本身或結構的成員值.";
Blockly.Msg.STRUCTURE_MUTATORCONTAINER_TOOLTIP = "新增, 刪除, 或重新安排成員.";
Blockly.Msg.STRUCTURE_MUTATORARG_TOOLTIP = "新增成員至結構."

Blockly.Msg.TIME_CURRENT_TOOLTIP = "顯示目前時間 從 \"0000(年)-00(月)-00(日)-00(時)-00(分)-00(秒)\"";
Blockly.Msg.TIME_REQUIREDTIME_TOOLTIP = "儲存經過的時間至之後的浮點數double變數";

Blockly.Msg.VARIABLES_DECLARE_TOOLTIP = "宣告變數";

Blockly.Msg.TAG_MATH_CONVERT_TYPE = ['(type)'];
Blockly.Msg.MATH_CONVERT_TYPE_TOOLTIP = "型態轉換運算子, 轉換成指定型態";

Blockly.Msg.TAG_STDIO_TAB = ['stdio.h', 'tab', '\t'];
Blockly.Msg.STDIO_TAB_TITLE="Tab";
Blockly.Msg.STDIO_TAB_TOOLTIP="TAB鍵";
Blockly.Msg.VARIABLES_ARRAY_POINTER_TOOLTIP="陣列名稱指標";

Blockly.Msg.MATH_INCREMENT_OP="++";
Blockly.Msg.MATH_DECREMENT_OP="--";
Blockly.Msg.TAG_MATH_PREV_INC_DECREMENT= ['number', 'previous increment/decrement', '++', '--'];
Blockly.Msg.MATH_PREV_INC_DECREMENT_TOOLTIP="前置遞增/遞減運算子";
Blockly.Msg.TAG_MATH_POST_INC_DECREMENT= ['number', 'post increment/decrement', '++', '--'];
Blockly.Msg.MATH_POST_INC_DECREMENT_TOOLTIP="後置遞增/遞減運算子";
Blockly.Msg.MATH_INCREMENT_EXPRESSION_TITLE="%1 ++";
Blockly.Msg.MATH_INCREMENT_EXPRESSION_TOOLTIP="遞增運算式";
Blockly.Msg.TAG_MATH_INCREMENT_EXPRESSION=['number', 'increment expression', '++'];
Blockly.Msg.MATH_DECREMENT_EXPRESSION_TITLE="%1 --";
Blockly.Msg.MATH_DECREMENT_EXPRESSION_TOOLTIP="遞減運算式";
Blockly.Msg.TAG_MATH_DECREMENT_EXPRESSION=['number', 'decrement expression', '++'];

Blockly.Msg.TAG_MATH_AUTO_CONVERT_TYPE= ['auto type conversions'];
Blockly.Msg.MATH_AUTO_CONVERT_TYPE_TOOLTIP="指定敘述與算術型態轉換";

Blockly.Msg.TAG_VARIABLES_STRING_NULL = ['null', 'null-terminated'];
Blockly.Msg.VARIABLES_STRING_NULL = "\'\\0\'";
Blockly.Msg.VARIABLES_STRING_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.VARIABLES_STRING_NULL_TOOLTIP = "傳回字串結束字元.";
Blockly.Msg.VARIABLES_STRING_DECLARE_DEFAULT_NAME="myStr";
Blockly.Msg.VARIABLES_STRING_DECLARE_TITLE="字串";
Blockly.Msg.VARIABLES_STRING_DECLARE_LENGTH='字元數';
Blockly.Msg.VARIABLES_STRING_DECLARE_VALUE="初始值";

Blockly.Msg.VARIABLES_ARRAY_DECLARE_VALUE="初始值";
Blockly.Msg.VARIABLES_ARRAY_INITIAL="從清單初始";
Blockly.Msg.VARIABLES_ARRAY_INITIAL_WARNING="宣告的一維陣列尺寸[小於]清單元素的個數!";
Blockly.Msg.VARIABLES_ARRAY_INITIAL_TOOLTIP="使用大括號清單來初始陣列";
Blockly.Msg.ARRAY_CREATE_WITH_CONTAINER_TITLE_ADD="清單";
Blockly.Msg.ARRAY_CREATE_WITH_CONTAINER_TOOLTIP="新增, 刪除, 或重排陣列初始清單";
Blockly.Msg.ARRAY_CREATE_WITH_ITEM_TITLE="元素值";
Blockly.Msg.ARRAY_CREATE_WITH_ITEM_TOOLTIP="陣列元素值";

Blockly.Msg.TEXT_CHAR='http://arduino.cc/en/Reference/char';
Blockly.Msg.TEXT_CHAR_TOOLTIP='字元常數值, 只能是單一字元.';
Blockly.Msg.TEXT_CHAR_WARNING="只能指定單一字元值, 或逸出字元!";
